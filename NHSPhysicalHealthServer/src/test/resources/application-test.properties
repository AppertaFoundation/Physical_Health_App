apperta.cms.cache.duration.until.refresh                  = P2D

# This configuration file will override entries in /src/main/resources/application.properties
# To use it, ensure your test extends AbstractIntegrationTest, or has the '@ActiveProfiles("test")' annotation.
apperta.cms.tar.local.file                                = @project.build.directory@/cms.tar.gz

# Disabled during tests by default to avoid noise in test logs
# this is overridden in the NotificationsIT tests
apperta.cms.tar.rebuild.schedule.cron                     = -

apperta.corsconfig.origins                                = http://apperta-client-1,http://apperta-client-2,http://apperta-client-3

apperta.ehr.baseurl                                       = http://ehr
apperta.ehrdemographics.baseurl                           = http://ehrdemographics
apperta.ehr.user.username                                 = ehr-test-user
apperta.ehr.user.token                                    = ehr-test-token

apperta.oauth.client.name                                 = test-client

apperta.oauth.client.password                             = test-password

# Disabled during tests by default to avoid noise in test logs
# this is overridden in the NotificationsIT tests
apperta.notifications.schedule.cron                       = -

apperta.password.reset.validity.duration                  = PT5M

apperta.ui.url                                            = http://apperta-ui


## Testing specific properties

logging.level.org.springframework.web.client.RestTemplate = DEBUG

# we turn off caching for integration testing, otherwise results
# are cached between tests
spring.cache.type                                         = NONE

# we let spring configure our H2 connection details to allow it to drop/recreate
# the embedded database after any test marked as @DirtiesContext. The generate
# unique primaryEntityName setting is required to ensure a different H2 instance is used for each test
# https://stackoverflow.com/questions/40210247/how-to-drop-in-memory-h2db-between-spring-integration-tests/40212903
spring.datasource.driver-class-name                       = org.h2.Driver
spring.datasource.generate-unique-name                    = true

spring.jpa.show-sql                                       = true

spring.mail.host                                          = localhost
# green mail default SMTP port
spring.mail.port                                          = 3025
spring.mail.properties.mail.smtp.auth                     = false

spring.profiles.active                                    = test